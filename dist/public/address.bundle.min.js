/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/js/address.js":
/*!****************************!*\
  !*** ./dist/js/address.js ***!
  \****************************/
/***/ (() => {

eval("const cep = document.getElementById(\"cep\");\r\nconst street = document.getElementById(\"street\")\r\nconst neighbourhood = document.getElementById(\"neighbourhood\")\r\nconst city = document.getElementById(\"city\")\r\nconst state = document.getElementById(\"state\")\r\n\r\n\r\ndocument.getElementById(\"form\").addEventListener(\"submit\", (ev) => {\r\n  ev.preventDefault();\r\n\r\n  try {\r\n    verifieldCEP();\r\n\r\n    sessionStorage.setItem('cep', cep.value)\r\n    sessionStorage.setItem('house', document.getElementById('house').value + document.getElementById('complement').value)\r\n    sessionStorage.setItem('street', street.value)\r\n    sessionStorage.setItem('neighbourhood', neighbourhood.value)\r\n    sessionStorage.setItem('city', city.value)\r\n    sessionStorage.setItem('state', state.value)\r\n\r\n    window.location.href = '../html/password.html'\r\n  } catch (error) {}\r\n});\r\n\r\n\r\n\r\ncep.addEventListener(\"input\", () => {\r\n  const maxLength = 8;\r\n\r\n  if (cep.value.length > maxLength) {\r\n    cep.value = cep.value.slice(0, maxLength);\r\n  }\r\n});\r\n\r\nfunction verifieldCEP() {\r\n\r\n    fixCEP()\r\n      .then((res) => {\r\n\r\n        street.value = res.logradouro;\r\n        neighbourhood.value = res.bairro;\r\n        city.value = res.localidade;\r\n        state.value = res.uf;\r\n\r\n        street.classList.add(\"success-message\");\r\n        neighbourhood.classList.add(\"success-message\");\r\n        city.classList.add(\"success-message\");\r\n        state.classList.add(\"success-message\");\r\n        document.getElementById(\"cep-error\").textContent = \"\";\r\n        cep.classList.remove(\"error-message\");\r\n        cep.classList.add(\"success-message\");\r\n\r\n      })\r\n      .catch(() => {\r\n        cep.classList.remove(\"success-message\");\r\n        cep.classList.add(\"error-message\");\r\n        street.value = \"\";\r\n        neighbourhood.value = \"\";\r\n        city.value = \"\";\r\n        state.value = \"\";\r\n        document.getElementById(\"cep-error\").textContent = \"CEP não encontrado\";\r\n      });\r\n  }\r\n\r\n\r\ndocument.getElementById(\"cep\").addEventListener(\"click\", () => {\r\n  setInterval(() => {\r\n    verifieldCEP();\r\n  }, 3000);\r\n});\r\n\r\nasync function fixCEP() {\r\n  const response = await fetch(\r\n    `https://viacep.com.br/ws/${document.getElementById(\"cep\").value}/json/`\r\n  );\r\n  const cep = await response.json();\r\n  if (cep.cep === undefined) {\r\n    const err = new Error(\"CEP não encontrado na base de dados!\");\r\n    return Promise.reject(err);\r\n  }\r\n  return cep;\r\n}\r\n\n\n//# sourceURL=webpack://projeto-banco/./dist/js/address.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./dist/js/address.js"]();
/******/ 	
/******/ })()
;